# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
envlist = lint, static, unit
isolated_build=true

[vars]
src_path = {toxinidir}/src
tst_path = {toxinidir}/tests
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {[vars]src_path}
  PY_COLORS=1
passenv =
  PYTHONPATH
  HOME
  PATH
allowlist_externals = uv

[testenv:lock]
description = Update uv.lock with the latest deps
commands =
  uv lock --upgrade --no-cache

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    black {[vars]all_path}
    ruff check --fix {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff
    codespell
commands =
    codespell .
    ruff check {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static]
description = Run static analysis checks
deps =
    ops
    pyright
commands =
    pyright --pythonversion 3.8 {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    -e {toxinidir}
    pytest
    pytest-mock
    coverage[toml]
allowlist_externals =
    /usr/bin/env
commands =
    coverage run \
      --source={[vars]src_path} \
      -m pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tst_path}/unit
    coverage report

[testenv:integration]
description = Run integration tests
deps =
    -e {toxinidir}
    pytest
    pytest-mock
    tenacity
    coverage[toml]
commands =
    coverage run --source={[vars]src_path} \
    -m pytest {[vars]tst_path}/integration -v --tb native -s {posargs}
    coverage report
